{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nlet userSelectedDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      alert(\"Please choose a date in the future\");\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\nflatpickr(\"#datetime-picker\", options);\nconst dateInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector(\"button\")\nstartBtn.disabled = true;\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nstardBtn.eventListener('click', onTimerStart);\n\nonTimerStart()\n{\n  startBtn.disable = true;\n  dateInput.disable = true;\n  const time = convertMs(userSelectedDate - new Date());\n  updateTimer(time);\n}\nfunction updateTimer(time) {\n  days.textContent = formatDays(time.days);\n  hours.textContent = addZero(time.hours);\n  minutes.textContent = addZero(time.minutes);\n  seconds.textContent = addZero(time.seconds);\n}\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction formatDays(value) { return value < 10 ? String(value).padStart(2, '0') : value; }\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["userSelectedDate","options","selectedDates","startBtn","flatpickr","dateInput","days","hours","minutes","seconds","time","convertMs","updateTimer","formatDays","addZero","value","ms"],"mappings":"wIAEA,IAAIA,EAAmB,KACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,MACzB,MAAM,oCAAoC,EAC1CC,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBH,EAAmBE,EAAc,CAAC,EAErC,CACH,EACAE,EAAU,mBAAoBH,CAAO,EACrC,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EACrDF,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,SAAW,GACpB,MAAMG,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,SAAS,cAAc,QAAS,YAAY,EAE5C,aAAc,EACd,CACEN,EAAS,QAAU,GACnBE,EAAU,QAAU,GACpB,MAAMK,EAAOC,EAAUX,EAAmB,IAAI,IAAM,EACpDY,EAAYF,CAAI,CAClB,CACA,SAASE,EAAYF,EAAM,CACzBJ,EAAK,YAAcO,EAAWH,EAAK,IAAI,EACvCH,EAAM,YAAcO,EAAQJ,EAAK,KAAK,EACtCF,EAAQ,YAAcM,EAAQJ,EAAK,OAAO,EAC1CD,EAAQ,YAAcK,EAAQJ,EAAK,OAAO,CAC5C,CACA,SAASI,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAWE,EAAO,CAAE,OAAOA,EAAQ,GAAK,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAAIA,CAAQ,CAE1F,SAASJ,EAAUK,EAAI,CAQrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAE1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EAEpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EAEjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}